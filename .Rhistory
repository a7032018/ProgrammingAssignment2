package()
package("Bioconductor")
install.packages("bio3d")
a=c(1,2,3,4,5,6,7,8,9)
b=c(1:9)
install.packages("~/Downloads/bio3d_2.0-1.tar", repos = NULL)
install.packages("~/Downloads/bio3d_2.0-1.tar", repos = NULL)
install.packages(c("foreign", "lattice", "Matrix", "mgcv", "nlme", "rpart", "survival"))
library("bio3d")
help.start()
demo(graphics)
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
":"
`:`?
q
?`:`
seq(1:20)
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
install_from_swirl("R Programming")
install_from_swirl("Data Analysis")
install_from_swirl("Open Intro")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Mathematica")
install_from_swirl("Regression Models")
install_from_swirl("Getting and Cleaning Data")
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
c(my_char,"Peiju")
my_name<-c(my_char,"Peiju")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!", sep=" ")
paste(1:3,c("x","y","z"), sep = "")
paste(1:3,c("x","y","z"), sep = "")
paste(1:3, c("x","y","z"), sep = "")
paste(1:3, c("x", "y", "z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-
is.na(my_data)
my_na
my_data
my_data == NA
sum(my_na==TRUE)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <-c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20, nrow=4, ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patient,my_matrix)
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cname<-c("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
head(flags)
dim (flags)
viewinfo()
class(flags)
as.list(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
lass(cls_vect)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,$landmass,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=FALSE)
sample(1:20,10)
LETTERS
sample(LATTERS)
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
rbflip2<-inom(1,size=100,prob=0.7)
rbflip2<-rbinom(1,size=100,prob=0.7)
flip2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
cm
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-strptime("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time(>t1)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(,t1,units='days'))
difftime(Sys.time(),t1,units='days')
search()
library(swirl)
search()
make.power<-function(n){}
make.power<-function(n){pow<-function(x){x^n}pow}
make.power<-function(n){pow<-function(x){x^n} pow}
make.power<-function(n)
{
pow<-function(x)
{
x^n
}
pow
}
make.power(3)
cube
make.power(2)
cube<-make.power(3)
cube(3)
square<-make.power(2)
square(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
}
x
}
z<-10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
g
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
}
y
x<-5
y<-if(x<3){NA}else{10}
y
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
Sepal.Length
iris
sapply(iris,mean)
lapply(iris,mean)
str iris
str(iris)
tapply(iris,virginica,mean)
tapply(iris,"virginica",mean)
split(iris)
split(iris, f)
split(iris, 1)
split(iris, 2)
split(iris, 3)
split(iris, "species")
split(iris)
sapply(split(iris,1),mean)
sapply(split(iris,1),mean, rm.na=TRUE)
str(iris)
s<-split(iris,iris$Species)
lapply (s, function(x) colmeans(x[, c("Sepal.Length")]))
lapply (s, function(x) colMeans(x[, c("Sepal.Length")]))
lapply (s, function(iris) colMeans(iris[, c("Sepal.Length")]))
lapply (s, colMeans(iris[, c("Sepal.Length")]))
x<-iris
class(x)
lapply (s, colMeans(iris[, c("Sepal.Length")]))
x
lapply (s, function (x) colMeans(x[, c("Sepal.Length")]))
sapply (s, function (x) colMeans(x[, c("Sepal.Length")]))
sapply (s, function (x) colMeans(x[, c("Sepa2l.Length")]))
s
mean (s)
mean (s, rm.na=TRUE)
mean(s$virginica)
summary
summary(s)
class(s)
sapply(s)
sapply(s,mean)
lapply(s,mean)
lapply(s,colMeans)
lapply(s,mean)
lapply(s,mean(na.rm=TRUE))
mean(s,na.rm=TRUE))
mean(s,na.rm=TRUE)
s
$virginica
s$virginica
colMeans(s$virginica)
?colMeans
colMeans(s$virginica, dims=2)
colMeans(s$virginica, na.rm = TRUEdims=2)
colMeans(s$virginica, na.rm = TRUE, dims=2)
s$virginica$Sepal.Length
mean(s$virginica$Sepal.Length)
colMeans(iris)
apply(iris,2,mean)
apply(iris[,1:4],mean)
apply (iris,2,mean)
rowMeans(iris[,1:4])
colMeans(iris)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
library(dataets)
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
str(mtcars)
with(mtcars, tapply(hp, cyl, mean))
209.21429-82.63636
s<-split(mtcars,mtcars$cyl)
s
s$4
mean(s$4)
s$'4'
s$'4'$hp
mean(s$'4'$hp)-mean(s$'8'$hp)
debug(ls)
ls
ls
sum
ls
class
class(s)
ls
?ls
ls()
q
q
z
q
q
q
?
;
;
q
q
q
q
q
q
q
q
ls
ls(x)
exit()
q()
library(datasets)
data(iris)
?tapply
tapply(iris,"Sepal.Length",mean)
tapply(iris,Sepal.Length,mean)
tapply(iris,Sepal.Length,mean)
str(iris)
tapply(iris,$Sepal.Length,mean)
tapply(iris,Sepal.Length,mean)
tapply(iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,iris$Sepal.Length,mean)
tapply(iris,iris$Sepal.Length,mean)
?inverse
?solve
setwd
setwd()
?setwd
getwd()
setwd("~/Google Drive/R Project/Assignment2/ProgrammingAssignment2")
